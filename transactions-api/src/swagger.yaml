openapi: 3.0.3
info:
  title: Transactions Service REST API
  version: v1
servers:
  - description: 'Local'
    url: 'http://localhost:8080'
tags:
  - description: Transactions
    name: transactions
  - description: Addresses
    name: addresses
paths:
  /api/addresses:
    get:
      description: This request retrieves all the addresses sorted by balance
      operationId: getAddresses
      parameters:
        - in: query
          required: false
          name: limit
          schema:
            type: integer
            default: 100
        - in: query
          required: false
          name: order
          schema:
            $ref: '#/components/schemas/OrderParam'
      responses:
        200:
          description: Success          
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
        500:
          description: Internal Server Error          
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
      tags:
        - addresses  
  /api/transactions:
    get:
      description: This request retrieves all transactions sorted by AVAX
      operationId: getTransactions
      parameters:
        - in: query
          required: false
          name: order
          schema:
            $ref: '#/components/schemas/OrderParam'
      responses:
        200:
          description: Success          
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        500:
          description: Internal Server Error          
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
      tags:
        - transactions
  /api/transactions/address/{address}:
    get:
      description: This request retrieves all transactions sorted by AVAX
      operationId: getTransactionsByAddress
      parameters:
        - in: query
          required: false
          name: direction
          description: |
            Transaction direction.\
            Sent=`OUT`, Received=`IN`, Both=`ALL`          
          schema:
            $ref: '#/components/schemas/DirectionParam'
        - in: path
          required: true
          name: address
          schema:
            type: string
      responses:
        200:
          description: Success          
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressTransaction'
        500:
          description: Internal Server Error          
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
      tags:
        - transactions
  /api/transactions/count/address/{address}:
    get:
      description: This request retrieves all transactions sorted by AVAX
      operationId: getTransactionsByAddressCount
      parameters:
        - in: query
          required: false
          name: direction
          description: |
            Transaction direction.\
            Sent=`OUT`, Received=`IN`, Both=`ALL`          
          schema:
            $ref: '#/components/schemas/DirectionParam'
        - in: path
          required: true
          name: address
          schema:
            type: string
      responses:
        200:
          description: Success          
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
      tags:
        - transactions
components:
  schemas:
    Address:
      type: object
      properties:
        address:
          type: string
        balance:
          type: number
    Transaction:
      type: object
      properties:
        transactionId:
          type: string
        fromAddress:
          type: string
        toAddress:
          type: string
        transactionIndex:
          type: number
        blockNumber:
          type: number
        etherValue:
          type: number
        receiptStatus:
          type: string
          enum:
            - success
            - failed
    AddressTransaction:
      type: object
      properties:
        transactionId:
          type: string
        fromAddress:
          type: string
        toAddress:
          type: string
        transactionIndex:
          type: number
        blockNumber:
          type: number
        etherValue:
          type: number
        receiptStatus:
          type: string
          enum:
            - success
            - failed
        direction:
          type: string
          description: Sent=`OUT`, Received=`IN`
          enum: 
            - IN
            - OUT          
    CountResponse:
      type: object
      properties:
        total:
          type: number
    DirectionParam:
      type: string
      description: |
        Transaction direction.\
        Sent=`OUT`, Received=`IN`, Both=`ALL`
      default: ALL      
      enum: 
        - IN
        - OUT
        - ALL
    OrderParam:
      type: string
      description: Sort order
      default: ASC
      enum: 
        - ASC
        - DESC
    ErrorInfo:
      type: object
      properties:
        exception:
          type: string
        message:
          type: string